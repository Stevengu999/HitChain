<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="ChangeListManager">
    <list default="true" id="02dcdd5d-ee3e-426c-b3b3-a8c8e8e3566d" name="Default Changelist" comment="">
      <change afterPath="$PROJECT_DIR$/.codeclimate.yml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.dockerignore" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.gitattributes" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.gx/lastpubver" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/go-ipfs.iml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/misc.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/modules.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/vcs.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.travis.yml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/CHANGELOG.md" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/CODEOWNERS" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Dockerfile" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Dockerfile.fast" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Godeps/Godeps.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Godeps/_workspace/src/github.com/hashicorp/golang-lru/.gitignore" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Godeps/_workspace/src/github.com/hashicorp/golang-lru/LICENSE" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Godeps/_workspace/src/github.com/hashicorp/golang-lru/README.md" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Godeps/_workspace/src/github.com/hashicorp/golang-lru/lru.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Godeps/_workspace/src/github.com/hashicorp/golang-lru/lru_test.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Godeps/_workspace/src/github.com/jbenet/go-random-files/LICENSE" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Godeps/_workspace/src/github.com/jbenet/go-random-files/Makefile" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Godeps/_workspace/src/github.com/jbenet/go-random-files/README.md" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Godeps/_workspace/src/github.com/jbenet/go-random-files/lib.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Godeps/_workspace/src/github.com/jbenet/go-random-files/random-files/.gitignore" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Godeps/_workspace/src/github.com/jbenet/go-random-files/random-files/README.md" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Godeps/_workspace/src/github.com/jbenet/go-random-files/random-files/main.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Godeps/_workspace/src/github.com/jbenet/go-random-files/ringreader/ringreader.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Godeps/_workspace/src/github.com/jbenet/go-random-files/ringreader/ringreader_test.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Godeps/_workspace/src/github.com/jbenet/go-random/.travis.yml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Godeps/_workspace/src/github.com/jbenet/go-random/LICENSE" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Godeps/_workspace/src/github.com/jbenet/go-random/README.md" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Godeps/_workspace/src/github.com/jbenet/go-random/lib.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Godeps/_workspace/src/github.com/jbenet/go-random/random/.gitignore" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Godeps/_workspace/src/github.com/jbenet/go-random/random/random.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Godeps/_workspace/src/github.com/jbenet/go-random/random_test.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Godeps/_workspace/src/github.com/mitchellh/go-homedir/LICENSE" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Godeps/_workspace/src/github.com/mitchellh/go-homedir/README.md" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Godeps/_workspace/src/github.com/mitchellh/go-homedir/homedir.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Godeps/_workspace/src/github.com/mitchellh/go-homedir/homedir_test.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Godeps/_workspace/src/github.com/texttheater/golang-levenshtein/levenshtein/levenshtein.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Godeps/_workspace/src/github.com/texttheater/golang-levenshtein/levenshtein/levenshtein_test.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/ISSUE_TEMPLATE.md" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/LICENSE" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Makefile" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/README.md" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Rules.mk" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/appveyor.yml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/assets/README.md" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/assets/assets.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/assets/assets_test.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/assets/bindata.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/assets/init-doc/about" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/assets/init-doc/contact" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/assets/init-doc/docs/index" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/assets/init-doc/help" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/assets/init-doc/ping" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/assets/init-doc/quick-start" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/assets/init-doc/readme" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/assets/init-doc/security-notes" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/bin/Rules.mk" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/bin/archive-branches.sh" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/bin/check_go_path" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/bin/check_go_version" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/bin/check_gx_program" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/bin/check_version" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/bin/circle.sh" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/bin/container_daemon" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/bin/dist_get" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/bin/gencmdref" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/bin/graphmd" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/bin/gx" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/bin/gx-go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/bin/ipns-republish" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/bin/maketarball.sh" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/bin/mkreleaselog" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/bin/test-go-fmt" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/bin/tmp/gx-go.tar.gz" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/bin/tmp/gx.tar.gz" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/blocks/blockstoreutil/remove.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/ci/Dockerfile.buildenv" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/ci/Jenkinsfile" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/circle.yml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/cmd/ipfs/.gitignore" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/cmd/ipfs/Rules.mk" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/cmd/ipfs/daemon.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/cmd/ipfs/dist/LICENSE" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/cmd/ipfs/dist/README.md" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/cmd/ipfs/dist/install.sh" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/cmd/ipfs/dnsresolve_test.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/cmd/ipfs/init.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/cmd/ipfs/ipfs.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/cmd/ipfs/main.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/cmd/ipfs/runmain_test.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/cmd/ipfs/util/ulimit.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/cmd/ipfs/util/ulimit_freebsd.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/cmd/ipfs/util/ulimit_test.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/cmd/ipfs/util/ulimit_unix.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/cmd/ipfs/util/ulimit_windows.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/cmd/ipfswatch/README.md" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/cmd/ipfswatch/ipfswatch_test.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/cmd/ipfswatch/main.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/cmd/seccat/.gitignore" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/cmd/seccat/seccat.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/cmd/seccat/util.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/codecov.yml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/commands/command.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/commands/legacy/command.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/commands/legacy/legacy.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/commands/legacy/legacy_test.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/commands/legacy/request.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/commands/legacy/response.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/commands/reqlog.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/commands/request.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/commands/response.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/contribute.md" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/core/.gitignore" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/core/bootstrap.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/core/bootstrap_test.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/core/builder.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/core/commands/active.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/core/commands/add.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/core/commands/bitswap.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/core/commands/block.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/core/commands/bootstrap.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/core/commands/cat.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/core/commands/cmdenv/env.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/core/commands/commands.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/core/commands/commands_test.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/core/commands/config.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/core/commands/dag/dag.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/core/commands/dht.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/core/commands/dht_test.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/core/commands/diag.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/core/commands/dns.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/core/commands/e/error.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/core/commands/external.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/core/commands/files.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/core/commands/filestore.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/core/commands/get.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/core/commands/get_test.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/core/commands/helptext_test.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/core/commands/id.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/core/commands/keystore.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/core/commands/log.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/core/commands/ls.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/core/commands/mount_nofuse.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/core/commands/mount_unix.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/core/commands/mount_windows.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/core/commands/name/ipns.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/core/commands/name/ipnsps.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/core/commands/name/name.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/core/commands/name/publish.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/core/commands/object/diff.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/core/commands/object/object.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/core/commands/object/patch.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/core/commands/p2p.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/core/commands/pin.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/core/commands/ping.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/core/commands/pubsub.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/core/commands/refs.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/core/commands/repo.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/core/commands/resolve.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/core/commands/root.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/core/commands/root_test.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/core/commands/shutdown.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/core/commands/stat.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/core/commands/swarm.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/core/commands/sysdiag.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/core/commands/tar.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/core/commands/unixfs/ls.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/core/commands/unixfs/unixfs.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/core/commands/urlstore.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/core/commands/version.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/core/core.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/core/core_test.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/core/coreapi/block.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/core/coreapi/block_test.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/core/coreapi/coreapi.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/core/coreapi/dag.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/core/coreapi/dag_test.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/core/coreapi/interface/block.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/core/coreapi/interface/coreapi.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/core/coreapi/interface/dag.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/core/coreapi/interface/errors.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/core/coreapi/interface/key.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/core/coreapi/interface/name.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/core/coreapi/interface/object.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/core/coreapi/interface/options/block.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/core/coreapi/interface/options/dag.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/core/coreapi/interface/options/key.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/core/coreapi/interface/options/name.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/core/coreapi/interface/options/object.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/core/coreapi/interface/options/pin.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/core/coreapi/interface/path.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/core/coreapi/interface/pin.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/core/coreapi/interface/unixfs.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/core/coreapi/interface/util.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/core/coreapi/key.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/core/coreapi/key_test.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/core/coreapi/name.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/core/coreapi/name_test.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/core/coreapi/object.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/core/coreapi/object_test.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/core/coreapi/path.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/core/coreapi/path_test.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/core/coreapi/pin.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/core/coreapi/pin_test.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/core/coreapi/unixfs.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/core/coreapi/unixfs_test.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/core/coredag/cbor.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/core/coredag/dagpb.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/core/coredag/dagtransl.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/core/coredag/raw.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/core/corehttp/commands.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/core/corehttp/corehttp.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/core/corehttp/gateway.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/core/corehttp/gateway_handler.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/core/corehttp/gateway_indexPage.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/core/corehttp/gateway_test.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/core/corehttp/ipns_hostname.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/core/corehttp/logs.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/core/corehttp/metrics.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/core/corehttp/metrics_test.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/core/corehttp/option_test.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/core/corehttp/redirect.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/core/corehttp/webui.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/core/corerepo/gc.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/core/corerepo/pinning.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/core/corerepo/stat.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/core/coreunix/add.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/core/coreunix/add_test.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/core/coreunix/cat.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/core/coreunix/metadata.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/core/coreunix/metadata_test.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/core/coreunix/test/data/colors/orange" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/core/coreunix/test/data/corps/apple" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/core/coreunix/test/data/fruits/apple" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/core/coreunix/test/data/fruits/orange" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/core/mock/mock.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/core/pathresolver.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/core/pathresolver_test.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/coverage/.gitignore" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/coverage/Rules.mk" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/coverage/main/main.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/dagutils/diff.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/dagutils/diffenum.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/dagutils/diffenum_test.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/dagutils/utils.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/dagutils/utils_test.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/doc.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/docs/AUTHORS" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/docs/README.md" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/docs/cli-http-api-core-diagram.png" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/docs/command-completion.md" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/docs/config.md" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/docs/datastores.md" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/docs/debug-guide.md" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/docs/developer-certificate-of-origin" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/docs/experimental-features.md" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/docs/file-transfer.md" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/docs/fuse.md" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/docs/gateway.md" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/docs/generate-authors.sh" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/docs/github-issue-guide.md" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/docs/implement-api-bindings.md" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/docs/openbsd.md" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/docs/plugins.md" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/docs/releases.md" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/docs/transports.md" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/docs/windows.md" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/exchange/reprovide/providers.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/exchange/reprovide/reprovide.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/exchange/reprovide/reprovide_test.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/filestore/filestore.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/filestore/filestore_test.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/filestore/fsrefstore.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/filestore/pb/Rules.mk" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/filestore/pb/dataobj.pb.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/filestore/pb/dataobj.proto" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/filestore/util.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/fuse/ipns/common.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/fuse/ipns/ipns_test.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/fuse/ipns/ipns_unix.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/fuse/ipns/link_unix.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/fuse/ipns/mount_unix.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/fuse/mount/fuse.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/fuse/mount/mount.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/fuse/node/mount_darwin.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/fuse/node/mount_nofuse.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/fuse/node/mount_test.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/fuse/node/mount_unix.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/fuse/node/mount_windows.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/fuse/readonly/doc.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/fuse/readonly/ipfs_test.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/fuse/readonly/mount_unix.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/fuse/readonly/readonly_unix.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/keystore/keystore.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/keystore/keystore_test.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/keystore/memkeystore.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/keystore/memkeystore_test.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/misc/completion/ipfs-completion.bash" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/misc/launchd/README.md" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/misc/launchd/install.sh" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/misc/launchd/io.ipfs.ipfs-daemon.plist" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/mk/footer.mk" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/mk/git.mk" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/mk/golang.mk" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/mk/gx.mk" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/mk/header.mk" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/mk/tarball.mk" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/mk/util.mk" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/namesys/base.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/namesys/cache.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/namesys/dns.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/namesys/dns_test.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/namesys/interface.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/namesys/ipns_resolver_validation_test.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/namesys/namesys.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/namesys/namesys_test.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/namesys/opts/opts.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/namesys/proquint.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/namesys/publisher.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/namesys/publisher_test.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/namesys/republisher/repub.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/namesys/republisher/repub_test.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/namesys/resolve_test.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/namesys/routing.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/p2p/p2p.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/p2p/registry.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/package.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/pin/gc/gc.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/pin/internal/pb/Rules.mk" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/pin/internal/pb/doc.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/pin/internal/pb/header.pb.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/pin/internal/pb/header.proto" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/pin/pin.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/pin/pin_test.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/pin/set.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/pin/set_test.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/plugin/Rules.mk" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/plugin/ipld.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/plugin/loader/Rules.mk" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/plugin/loader/initializer.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/plugin/loader/load.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/plugin/loader/load_linux.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/plugin/loader/preload.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/plugin/loader/preload.sh" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/plugin/loader/preload_list" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/plugin/plugin.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/plugin/plugins/.gitignore" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/plugin/plugins/Rules.mk" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/plugin/plugins/gen_main.sh" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/plugin/plugins/git/git.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/plugin/tracer.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/repo/common/common.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/repo/fsrepo/config_test.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/repo/fsrepo/datastores.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/repo/fsrepo/doc.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/repo/fsrepo/fsrepo.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/repo/fsrepo/fsrepo_test.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/repo/fsrepo/migrations/mfsr.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/repo/fsrepo/migrations/mfsr_test.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/repo/fsrepo/migrations/migrations.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/repo/fsrepo/migrations/unpack.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/repo/fsrepo/misc.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/repo/mock.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/repo/onlyone.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/repo/repo.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/tar/format.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/test/.gitignore" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/test/3nodetest/Makefile" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/test/3nodetest/README.md" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/test/3nodetest/bin/.gitignore" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/test/3nodetest/bin/clean.sh" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/test/3nodetest/bin/save_logs.sh" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/test/3nodetest/bin/save_profiling_data.sh" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/test/3nodetest/bootstrap/Dockerfile" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/test/3nodetest/bootstrap/README.md" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/test/3nodetest/bootstrap/config" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/test/3nodetest/build/.gitignore" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/test/3nodetest/build/.gitkeep" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/test/3nodetest/client/Dockerfile" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/test/3nodetest/client/config" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/test/3nodetest/client/run.sh" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/test/3nodetest/data/.gitignore" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/test/3nodetest/data/Dockerfile" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/test/3nodetest/fig.yml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/test/3nodetest/run-test-on-img.sh" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/test/3nodetest/server/Dockerfile" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/test/3nodetest/server/README.md" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/test/3nodetest/server/config" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/test/3nodetest/server/run.sh" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/test/README.md" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/test/Rules.mk" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/test/api-startup/main.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/test/bench/bench_cli_ipfs_add/main.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/test/bench/offline_add/main.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/test/bin/.gitignore" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/test/bin/Rules.mk" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/test/bin/checkflags" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/test/bin/continueyn" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/test/bin/verify-go-fmt.sh" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/test/dependencies/Makefile" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/test/dependencies/go-sleep/.gitignore" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/test/dependencies/go-sleep/LICENSE" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/test/dependencies/go-sleep/README.md" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/test/dependencies/go-sleep/go-sleep.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/test/dependencies/go-timeout/.gitignore" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/test/dependencies/go-timeout/LICENSE" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/test/dependencies/go-timeout/main.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/test/dependencies/ma-pipe-unidir/LICENSE" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/test/dependencies/ma-pipe-unidir/main.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/test/integration/Makefile" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/test/integration/addcat_test.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/test/integration/bench_cat_test.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/test/integration/bench_test.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/test/integration/bitswap_wo_routing_test.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/test/integration/three_legged_cat_test.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/test/ipfs-test-lib.sh" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/test/sharness/.gitignore" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/test/sharness/Makefile" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/test/sharness/README.md" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/test/sharness/Rules.mk" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/test/sharness/lib/0001-Generate-partial-JUnit-reports.patch" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/test/sharness/lib/gen-junit-report.sh" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/test/sharness/lib/install-sharness.sh" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/test/sharness/lib/iptb-lib.sh" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/test/sharness/lib/random-dep.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/test/sharness/lib/test-aggregate-results.sh" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/test/sharness/lib/test-lib-hashes.sh" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/test/sharness/lib/test-lib.sh" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/test/sharness/t0010-basic-commands.sh" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/test/sharness/t0015-basic-sh-functions.sh" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/test/sharness/t0018-indent.sh" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/test/sharness/t0020-init.sh" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/test/sharness/t0021-config.sh" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/test/sharness/t0022-init-default.sh" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/test/sharness/t0023-shutdown.sh" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/test/sharness/t0024-datastore-config.sh" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/test/sharness/t0024-files/spec-newshardfun" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/test/sharness/t0024-files/spec-nosync" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/test/sharness/t0025-datastores.sh" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/test/sharness/t0030-mount.sh" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/test/sharness/t0031-mount-publish.sh" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/test/sharness/t0040-add-and-cat.sh" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/test/sharness/t0041-ping.sh" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/test/sharness/t0042-add-skip.sh" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/test/sharness/t0043-add-w.sh" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/test/sharness/t0044-add-symlink.sh" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/test/sharness/t0045-ls.sh" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/test/sharness/t0046-id-hash.sh" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/test/sharness/t0050-block.sh" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/test/sharness/t0051-object-data/UTF-8-test.txt" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/test/sharness/t0051-object-data/brokenPut.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/test/sharness/t0051-object-data/brokenPut.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/test/sharness/t0051-object-data/expected_getOut" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/test/sharness/t0051-object-data/testPut.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/test/sharness/t0051-object-data/testPut.pb" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/test/sharness/t0051-object-data/testPut.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/test/sharness/t0051-object.sh" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/test/sharness/t0052-object-diff.sh" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/test/sharness/t0053-dag-data/non-canon.cbor" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/test/sharness/t0053-dag.sh" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/test/sharness/t0060-daemon.sh" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/test/sharness/t0060-data/mss-ls" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/test/sharness/t0061-daemon-opts.sh" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/test/sharness/t0062-daemon-api.sh" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/test/sharness/t0063-daemon-init.sh" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/test/sharness/t0063-external.sh" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/test/sharness/t0065-active-requests.sh" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/test/sharness/t0066-migration.sh" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/test/sharness/t0070-user-config.sh" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/test/sharness/t0080-repo.sh" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/test/sharness/t0081-repo-pinning.sh" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/test/sharness/t0082-repo-gc-auto.sh" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/test/sharness/t0083-repo-fsck.sh" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/test/sharness/t0084-repo-read-rehash.sh" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/test/sharness/t0085-pins.sh" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/test/sharness/t0086-repo-verify.sh" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/test/sharness/t0087-repo-robust-gc.sh" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/test/sharness/t0088-repo-stat-symlink.sh" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/test/sharness/t0090-get.sh" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/test/sharness/t0095-refs.sh" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/test/sharness/t0100-name.sh" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/test/sharness/t0101-iptb-name.sh" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/test/sharness/t0110-gateway-data/foo.block" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/test/sharness/t0110-gateway-data/foofoo.block" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/test/sharness/t0110-gateway.sh" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/test/sharness/t0111-gateway-writeable.sh" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/test/sharness/t0112-gateway-cors.sh" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/test/sharness/t0120-bootstrap.sh" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/test/sharness/t0121-bootstrap-iptb.sh" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/test/sharness/t0125-twonode.sh" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/test/sharness/t0130-multinode.sh" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/test/sharness/t0131-multinode-client-routing.sh" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/test/sharness/t0140-swarm.sh" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/test/sharness/t0141-addfilter.sh" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/test/sharness/t0150-clisuggest.sh" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/test/sharness/t0151-sysdiag.sh" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/test/sharness/t0160-resolve.sh" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/test/sharness/t0165-keystore.sh" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/test/sharness/t0170-dht.sh" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/test/sharness/t0175-reprovider.sh" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/test/sharness/t0180-p2p.sh" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/test/sharness/t0180-pubsub-gossipsub.sh" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/test/sharness/t0180-pubsub.sh" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/test/sharness/t0181-private-network.sh" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/test/sharness/t0182-circuit-relay.sh" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/test/sharness/t0183-namesys-pubsub.sh" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/test/sharness/t0200-unixfs-ls.sh" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/test/sharness/t0210-tar.sh" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/test/sharness/t0220-bitswap.sh" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/test/sharness/t0230-channel-streaming-http-content-type.sh" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/test/sharness/t0231-channel-streaming.sh" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/test/sharness/t0235-cli-request.sh" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/test/sharness/t0236-cli-api-dns-resolve.sh" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/test/sharness/t0240-republisher.sh" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/test/sharness/t0250-files-api.sh" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/test/sharness/t0251-files-flushing.sh" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/test/sharness/t0252-files-gc.sh" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/test/sharness/t0260-sharding.sh" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/test/sharness/t0270-filestore.sh" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/test/sharness/t0271-filestore-utils.sh" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/test/sharness/t0272-urlstore.sh" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/test/sharness/t0275-cid-security-data/AFKSEBCGPUJZE.data" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/test/sharness/t0275-cid-security-data/CIQG6PGTD2VV34S33BE4MNCQITBRFYUPYQLDXYARR3DQW37MOT7K5XI.data" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/test/sharness/t0275-cid-security.sh" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/test/sharness/t0276-cidv0v1.sh" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/test/sharness/t0280-plugin-git-data/git.tar.gz" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/test/sharness/t0280-plugin-git.sh" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/test/sharness/t0300-docker-image.sh" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/test/sharness/t0301-docker-migrate.sh" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/test/sharness/t0400-api-security.sh" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/test/sharness/t0410-api-add.sh" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/test/sharness/t0500-issues-and-regressions-offline.sh" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/test/sharness/t0600-issues-and-regressions-online.sh" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/test/sharness/x0601-pin-fail-test.sh" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/test/sharness_test_coverage_helper.sh" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/thirdparty/README.md" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/thirdparty/assert/assert.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/thirdparty/cidv0v1/blockstore.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/thirdparty/dir/dir.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/thirdparty/math2/math2.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/thirdparty/notifier/notifier.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/thirdparty/notifier/notifier_test.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/thirdparty/pollEndpoint/main.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/thirdparty/unit/unit.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/thirdparty/unit/unit_test.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/thirdparty/verifbs/verifbs.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/version.go" afterDir="false" />
    </list>
    <option name="EXCLUDED_CONVERTED_TO_IGNORED" value="true" />
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FUSProjectUsageTrigger">
    <session id="-1950569355">
      <usages-collector id="statistics.lifecycle.project">
        <counts>
          <entry key="project.closed" value="1" />
          <entry key="project.open.time.1" value="1" />
          <entry key="project.open.time.11" value="1" />
          <entry key="project.opened" value="2" />
        </counts>
      </usages-collector>
      <usages-collector id="statistics.file.extensions.open">
        <counts>
          <entry key="mk" value="1" />
        </counts>
      </usages-collector>
      <usages-collector id="statistics.file.types.open">
        <counts>
          <entry key="PLAIN_TEXT" value="1" />
        </counts>
      </usages-collector>
      <usages-collector id="statistics.file.extensions.edit">
        <counts>
          <entry key="mk" value="3" />
        </counts>
      </usages-collector>
      <usages-collector id="statistics.file.types.edit">
        <counts>
          <entry key="PLAIN_TEXT" value="3" />
        </counts>
      </usages-collector>
    </session>
  </component>
  <component name="FileEditorManager">
    <leaf SIDE_TABS_SIZE_LIMIT_KEY="300">
      <file pinned="false" current-in-tab="true">
        <entry file="file://$PROJECT_DIR$/bin/Rules.mk">
          <provider selected="true" editor-type-id="text-editor">
            <state relative-caret-position="337">
              <caret line="29" column="41" lean-forward="true" selection-start-line="29" selection-start-column="41" selection-end-line="29" selection-end-column="41" />
            </state>
          </provider>
        </entry>
      </file>
    </leaf>
  </component>
  <component name="GOROOT" path="/usr/local/Cellar/go/1.10.3/libexec" />
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="IdeDocumentHistory">
    <option name="CHANGED_PATHS">
      <list>
        <option value="$PROJECT_DIR$/bin/Rules.mk" />
      </list>
    </option>
  </component>
  <component name="JsBuildToolGruntFileManager" detection-done="true" sorting="DEFINITION_ORDER" />
  <component name="JsBuildToolPackageJson" detection-done="true" sorting="DEFINITION_ORDER" />
  <component name="JsGulpfileManager">
    <detection-done>true</detection-done>
    <sorting>DEFINITION_ORDER</sorting>
  </component>
  <component name="NodePackageJsonFileManager">
    <packageJsonPaths>
      <path value="$PROJECT_DIR$/package.json" />
    </packageJsonPaths>
  </component>
  <component name="ProjectFrameBounds" fullScreen="true">
    <option name="width" value="1280" />
    <option name="height" value="800" />
  </component>
  <component name="ProjectView">
    <navigator proportions="" version="1">
      <foldersAlwaysOnTop value="true" />
    </navigator>
    <panes>
      <pane id="Scope" />
      <pane id="ProjectPane">
        <subPane>
          <expand>
            <path>
              <item name="go-ipfs" type="b2602c69:ProjectViewProjectNode" />
              <item name="go-ipfs" type="462c0819:PsiDirectoryNode" />
            </path>
            <path>
              <item name="go-ipfs" type="b2602c69:ProjectViewProjectNode" />
              <item name="go-ipfs" type="462c0819:PsiDirectoryNode" />
              <item name="bin" type="462c0819:PsiDirectoryNode" />
            </path>
          </expand>
          <select />
        </subPane>
      </pane>
    </panes>
  </component>
  <component name="PropertiesComponent">
    <property name="go.gopath.indexing.explicitly.defined" value="true" />
    <property name="go.sdk.automatically.set" value="true" />
    <property name="last_opened_file_path" value="$PROJECT_DIR$" />
    <property name="nodejs_interpreter_path.stuck_in_default_project" value="undefined stuck path" />
    <property name="nodejs_npm_path_reset_for_default_project" value="true" />
    <property name="settings.editor.selected.configurable" value="preferences.externalDependencies" />
  </component>
  <component name="RunDashboard">
    <option name="ruleStates">
      <list>
        <RuleState>
          <option name="name" value="ConfigurationTypeDashboardGroupingRule" />
        </RuleState>
        <RuleState>
          <option name="name" value="StatusDashboardGroupingRule" />
        </RuleState>
      </list>
    </option>
  </component>
  <component name="ToolWindowManager">
    <frame x="0" y="0" width="1280" height="800" extended-state="0" />
    <editor active="true" />
    <layout>
      <window_info active="true" content_ui="combo" id="Project" order="0" visible="true" weight="0.2536349" />
      <window_info id="Structure" order="1" side_tool="true" weight="0.25" />
      <window_info id="Favorites" order="2" side_tool="true" />
      <window_info anchor="bottom" id="Message" order="0" />
      <window_info anchor="bottom" id="Find" order="1" />
      <window_info anchor="bottom" id="Run" order="2" />
      <window_info anchor="bottom" id="Debug" order="3" weight="0.4" />
      <window_info anchor="bottom" id="Cvs" order="4" weight="0.25" />
      <window_info anchor="bottom" id="Inspection" order="5" weight="0.4" />
      <window_info anchor="bottom" id="TODO" order="6" />
      <window_info anchor="bottom" id="Database Changes" order="7" show_stripe_button="false" />
      <window_info anchor="bottom" id="Version Control" order="8" />
      <window_info anchor="bottom" id="Terminal" order="9" />
      <window_info anchor="bottom" id="Event Log" order="10" side_tool="true" />
      <window_info anchor="right" id="Commander" internal_type="SLIDING" order="0" type="SLIDING" weight="0.4" />
      <window_info anchor="right" id="Ant Build" order="1" weight="0.25" />
      <window_info anchor="right" content_ui="combo" id="Hierarchy" order="2" weight="0.25" />
      <window_info anchor="right" id="Database" order="3" />
    </layout>
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="1" />
  </component>
  <component name="VcsContentAnnotationSettings">
    <option name="myLimit" value="2678400000" />
  </component>
  <component name="editorHistoryManager">
    <entry file="file://$PROJECT_DIR$/bin/Rules.mk">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="337">
          <caret line="29" column="41" lean-forward="true" selection-start-line="29" selection-start-column="41" selection-end-line="29" selection-end-column="41" />
        </state>
      </provider>
    </entry>
  </component>
</project>